Fortify:
HP Fortify, a Static Code Analyzer(SCA) tool has 6 analyzers. A Static Code Analyzer scans source code, identifies root causes of software security vulnerabilities and correlates and prioritizes results—giving you line–of–code guidance for closing gaps in your security.
Each analyzer of Fortify finds different types of vulnerabilities.
1.	Data Flow This analyzer detects potential vulnerabilities that involve tainted data (user-controlled input) put to potentially dangerous use. The data flow analyzer uses global, inter-procedural taint propagation analysis to detect the flow of data between a source (site of user input) and a sink (dangerous function call or operation). For example, the data flow analyzer detects whether a user-controlled input string of unbounded length is being copied into a statically sized buffer, and detects whether a user controlled string is being used to construct SQL query text.
2.	Control Flow This analyzer detects potentially dangerous sequences of operations. By analyzing control flow paths in a program, the control flow analyzer determines whether a set of operations are executed in a certain order. For example, the control flow analyzer detects time of check/time of use issues and uninitialized variables, and checks whether utilities, such as XML readers, are configured properly before being used.
3.	Structural This detects potentially dangerous flaws in the structure or definition of the program. For example, the structural analyzer detects assignment to member variables in Java servlets, identifies the use of loggers that are not declared static final, and flags instances of dead code that will never be executed because of a predicate that is always false.
4.	Semantic This analyzer detects potentially dangerous uses of functions and APIs at the intra-procedural level. Basically a smart GREP.
5.	Configuration This analyzer searches for mistakes, weaknesses, and policy violations in an application's deployment configuration files.
6.	Buffer This analyzer detects buffer overflow vulnerabilities that involve writing or reading more data than a buffer can hold.
7.	Content analyzer although this works similarly to the configuration analyzer except searches in non-config files for issues (such as looking in HTML, JSP for XPath matches)
